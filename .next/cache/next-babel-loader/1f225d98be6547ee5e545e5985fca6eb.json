{"ast":null,"code":"var _jsxFileName = \"/home/webnostix/Codebase/REACT/woo-next/components/context/AppContext.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nexport var AppContext = React.createContext([{}, function () {}]);\nexport var AppProvider = function AppProvider(props) {\n  var _useState = useState(null),\n      cart = _useState[0],\n      setCart = _useState[1];\n\n  useEffect(function () {\n    if (true) {\n      var cartData = localStorage.getItem('soap-cart');\n      cartData = null !== cartData ? JSON.parse(cartData) : '';\n      setCart(cartData);\n    }\n  }, []);\n  return __jsx(AppContext.Provider, {\n    value: [cart, setCart],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/home/webnostix/Codebase/REACT/woo-next/components/context/AppContext.js"],"names":["React","useState","useEffect","AppContext","createContext","AppProvider","props","cart","setCart","cartData","localStorage","getItem","JSON","parse","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,IAAMC,UAAU,GAAGH,KAAK,CAACI,aAAN,CACxB,CACE,EADF,EAEE,YAAM,CAAE,CAFV,CADwB,CAAnB;AAOP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAEC,KAAF,EAAa;AAAA,kBACZL,QAAQ,CAAC,IAAD,CADI;AAAA,MAC9BM,IAD8B;AAAA,MACxBC,OADwB;;AAEtCN,EAAAA,SAAS,CAAC,YAAM;AACd,cAAqB;AACnB,UAAIO,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;AACAF,MAAAA,QAAQ,GAAG,SAASA,QAAT,GAAoBG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAApB,GAA0C,EAArD;AACAD,MAAAA,OAAO,CAAEC,QAAF,CAAP;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,SAAS,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAAEF,IAAF,EAAQC,OAAR,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLF,KAAK,CAACQ,QADD,CAAT;AAID,CAdM","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport const AppContext = React.createContext(\n  [\n    {},\n    () => {}\n  ]\n)\n\nexport const AppProvider = ( props ) => {\n  const [ cart, setCart ] = useState(null)\n  useEffect(() => {\n    if (process.browser) {\n      let cartData = localStorage.getItem('soap-cart')\n      cartData = null !== cartData ? JSON.parse(cartData): ''\n      setCart( cartData )\n    }\n  }, [])\n\n  return ( <AppContext.Provider value={[ cart, setCart ]}>\n    { props.children }\n  </AppContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}