{"ast":null,"code":"var _jsxFileName = \"/home/webnostix/Codebase/REACT/woo-next/components/cart/AddToCartButton.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { addFirstProduct, updateCart } from './../../functions';\nimport { AppContext } from './../context/AppContext';\nimport { useState, useContext } from 'react';\n\nconst AddToCartButton = props => {\n  const {\n    product\n  } = props;\n  const {\n    0: cart,\n    1: setCart\n  } = useContext(AppContext);\n  const {\n    0: showViewCart,\n    1: setShowViewCart\n  } = useState(false);\n\n  const handleAddToCartClick = () => {\n    if (false) {\n      let existingCart = localStorage.getItem('soap-cart');\n\n      if (existingCart) {\n        // If existing add new product to cart\n        existingCart = JSON.parse(existingCart);\n        const qty = 1;\n        const updatedCart = updateCart(existingCart, product, qty);\n        setCart(updatedCart);\n      } else {\n        // If no cart Data, create empty array and push product to it\n        const newCart = addFirstProduct(product);\n        setCart(newCart);\n      }\n\n      setShowViewCart(true);\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: handleAddToCartClick,\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add to Cart\"), showViewCart ? __jsx(Link, {\n    href: \"/cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"View Cart\")) : '');\n};\n\nexport default AddToCartButton;","map":{"version":3,"sources":["/home/webnostix/Codebase/REACT/woo-next/components/cart/AddToCartButton.js"],"names":["Link","addFirstProduct","updateCart","AppContext","useState","useContext","AddToCartButton","props","product","cart","setCart","showViewCart","setShowViewCart","handleAddToCartClick","existingCart","localStorage","getItem","JSON","parse","qty","updatedCart","newCart"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAEjC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM;AAAA,OAAEE,IAAF;AAAA,OAAQC;AAAR,MAAoBL,UAAU,CAACF,UAAD,CAApC;AACA,QAAM;AAAA,OAAEQ,YAAF;AAAA,OAAgBC;AAAhB,MAAoCR,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMS,oBAAoB,GAAG,MAAM;AACjC,eAAqB;AACnB,UAAIC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAnB;;AAEA,UAAIF,YAAJ,EAAkB;AAChB;AACAA,QAAAA,YAAY,GAAGG,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAf;AACA,cAAMK,GAAG,GAAG,CAAZ;AACA,cAAMC,WAAW,GAAGlB,UAAU,CAACY,YAAD,EAAeN,OAAf,EAAwBW,GAAxB,CAA9B;AACAT,QAAAA,OAAO,CAACU,WAAD,CAAP;AAED,OAPD,MAOO;AACL;AACA,cAAMC,OAAO,GAAGpB,eAAe,CAACO,OAAD,CAA/B;AACAE,QAAAA,OAAO,CAACW,OAAD,CAAP;AACD;;AAEDT,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAnBD;;AAqBA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEC,oBAAjB;AAAuC,IAAA,SAAS,EAAC,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGF,YAAY,GACb,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADa,GAIb,EANF,CADF;AAUD,CArCD;;AAuCA,eAAeL,eAAf","sourcesContent":["import Link from 'next/link'\nimport { addFirstProduct, updateCart } from './../../functions'\nimport { AppContext } from './../context/AppContext'\nimport { useState, useContext } from 'react'\n\nconst AddToCartButton = (props) => {\n\n  const { product } = props\n  const [ cart, setCart ] = useContext(AppContext)\n  const [ showViewCart, setShowViewCart ] = useState(false)\n\n  const handleAddToCartClick = () => {\n    if (process.browser) {\n      let existingCart = localStorage.getItem('soap-cart')\n\n      if (existingCart) {\n        // If existing add new product to cart\n        existingCart = JSON.parse(existingCart)\n        const qty = 1\n        const updatedCart = updateCart(existingCart, product, qty)\n        setCart(updatedCart)\n\n      } else {\n        // If no cart Data, create empty array and push product to it\n        const newCart = addFirstProduct(product)\n        setCart(newCart)\n      }\n\n      setShowViewCart(true)\n    }\n  }\n\n  return(\n    <React.Fragment>\n      <button onClick={handleAddToCartClick} className=\"btn btn-success\">Add to Cart</button>\n      {showViewCart ? \n      <Link href=\"/cart\">\n        <button className=\"btn btn-primary\">View Cart</button>\n      </Link>\n    : ''}\n    </React.Fragment>\n  )\n}\n\nexport default AddToCartButton"]},"metadata":{},"sourceType":"module"}