{"ast":null,"code":"var _jsxFileName = \"/home/webnostix/Codebase/REACT/woo-next/pages/product.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from './../components/Layout';\nimport { withRouter } from 'next/router';\nimport client from '../components/ApolloClient';\nimport gql from 'graphql-tag';\n\nconst Product = props => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Product\"));\n};\n\nProduct.getInitialProps = async context => {\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? parseInt(slug.split('_').pop()) : context.query.id;\n};\n\nexport default withRouter(Product);","map":{"version":3,"sources":["/home/webnostix/Codebase/REACT/woo-next/pages/product.js"],"names":["Layout","withRouter","client","gql","Product","props","getInitialProps","context","query","slug","id","parseInt","split","pop"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD,CAND;;AAQAD,OAAO,CAACE,eAAR,GAA0B,MAAMC,OAAN,IAAkB;AAC1C,MAAI;AAAEC,IAAAA,KAAK,EAAE;AAACC,MAAAA;AAAD;AAAT,MAAmBF,OAAvB;AACA,QAAMG,EAAE,GAAGD,IAAI,GAAGE,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAD,CAAX,GAAqCN,OAAO,CAACC,KAAR,CAAcE,EAAlE;AACD,CAHD;;AAKA,eAAeT,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import Layout from './../components/Layout'\nimport {withRouter} from 'next/router'\nimport client from '../components/ApolloClient'\nimport gql from 'graphql-tag'\n\nconst Product = (props) => {\n  return (\n    <Layout>\n      <div>Product</div>\n    </Layout>\n  )\n}  \n\nProduct.getInitialProps = async(context) => {\n  let { query: {slug}} = context\n  const id = slug ? parseInt(slug.split('_').pop()) : context.query.id \n}\n\nexport default withRouter(Product)"]},"metadata":{},"sourceType":"module"}