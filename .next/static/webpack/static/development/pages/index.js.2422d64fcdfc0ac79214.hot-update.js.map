{"version":3,"file":"static/webpack/static/development/pages/index.js.2422d64fcdfc0ac79214.hot-update.js","sources":["webpack:///./functions.js"],"sourcesContent":["export const getFloatValue = (string) => {\n  let floatVal = string.match(/[+-]?\\d+(\\.\\d+)?/g)[0]\n  console.warn(floatVal)\n  return (null !== floatVal) ? parseFloat( parseFloat(floatVal).toFixed(2)): ''\n} \n\nexport const addFirstProduct = (product) => {\n  let productPrice = getFloatValue(product.price)\n  \n  let newCart = {\n    products: [],\n    totalProductsNumber: 1,\n    totalProductsPrice: productPrice\n  }\n\n  const newProduct = createNewProduct(product, productPrice, 1)\n  newCart.products.push(newProduct)\n  localStorage.setItem('soap-cart', JSON.stringify(newCart))\n  return newCart\n}\n/**\n * @param  {} product\n * @param  {} productPrice\n * @param  {} qty\n * @param  {product.productId} =>{return{productID\n * @param  {product.image.sourceUrl} image\n * @param  {product.name} name\n * @param  {productPrice} price\n * @param  {qty} qty\n * @param  {parseFloat((productPrice*qty} totalPrice\n */\nexport const createNewProduct = (product, productPrice, qty) => {\n  return {\n    productID: product.productId,\n    image: product.image.sourceUrl,\n    name: product.name,\n    price: productPrice,\n    qty: qty,\n    totalPrice: parseFloat((productPrice * qty).toFixed(2))\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;;A","sourceRoot":""}