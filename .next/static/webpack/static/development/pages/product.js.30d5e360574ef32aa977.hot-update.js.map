{"version":3,"file":"static/webpack/static/development/pages/product.js.30d5e360574ef32aa977.hot-update.js","sources":["webpack:///./pages/product.js"],"sourcesContent":["import Layout from './../components/Layout'\nimport { withRouter } from 'next/router'\nimport client from '../components/ApolloClient'\nimport gql from 'graphql-tag'\n\nconst Product = (props) => {\n  return (\n    <Layout>\n      <div>Product</div>\n    </Layout>\n  )\n}\n\nProduct.getInitialProps = async (context) => {\n  let { query: { slug } } = context\n  const id = slug ? parseInt(slug.split('_').pop()) : context.query.id\n\n  const PRODUCT_QUERY = gql`query Product($id: Int!) {\n    productBy( productId: ${id}) {\n        productId\n        averageRating\n        slug\n        description\n        name\n        image {\n          uri\n          sourceUrl\n        }\n        ... on SimpleProduct {\n          id\n          name\n          price\n        }\n      }\n    }\n  }`\n  const res = await client.query({\n    query: PRODUCT_QUERY,\n    variables: {id}\n  })\n\n  return {\n    product: res.data.product\n  }\n}\n\nexport default withRouter(Product)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAJA;AAAA;AAwBA;AACA;AAAA;AAAA;AAFA;AACA;AAxBA;AAuBA;AAvBA;AA6BA;AADA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgCA;;;;A","sourceRoot":""}